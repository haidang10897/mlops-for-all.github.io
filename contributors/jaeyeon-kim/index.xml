<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jaeyeon Kim on</title><link>https://mlops-for-all.github.io/contributors/jaeyeon-kim/</link><description>Recent content in Jaeyeon Kim on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 13 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mlops-for-all.github.io/contributors/jaeyeon-kim/index.xml" rel="self" type="application/rss+xml"/><item><title>4. Why Kubernetes?</title><link>https://mlops-for-all.github.io/docs/introduction/why_kubernetes/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/introduction/why_kubernetes/</guid><description>MLOps &amp;amp; Kubernetes # 그렇다면 MLOps를 이야기할 때, 쿠버네티스(Kubernetes)라는 단어가 항상 함께 들리는 이유가 무엇일까요?
성공적인 MLOps 시스템을 구축하기 위해서는 MLOps의 구성요소 에서 설명한 것처럼 다양한 구성 요소들이 필요하지만, 각각의 구성 요소들이 유기적으로 운영되기 위해서는 인프라 레벨에서 수많은 이슈를 해결해야 합니다.
간단하게는 수많은 머신러닝 모델의 학습 요청을 차례대로 실행하는 것, 다른 작업 공간에서도 같은 실행 환경을 보장해야 하는 것, 배포된 서비스에 장애가 생겼을 때 빠르게 대응해야 하는 것 등의 이슈 등을 생각해볼 수 있습니다.</description></item><item><title>1. Introduction</title><link>https://mlops-for-all.github.io/docs/setup-kubernetes/intro/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/setup-kubernetes/intro/</guid><description>MLOps 시스템 구축해보기 # MLOps를 공부하는 데 있어서 가장 큰 장벽은 MLOps 시스템을 구성해보고 사용해보기가 어렵다는 점입니다. AWS, GCP 등의 퍼블릭 클라우드 혹은 Weight &amp;amp; Bias, neptune.ai 등의 상용 툴을 사용해보기에는 과금에 대한 부담이 존재하고, 처음부터 모든 환경을 혼자서 구성하기에는 어디서부터 시작해야 할지 막막하게 느껴질 수밖에 없습니다.
이런 이유들로 MLOps를 선뜻 시작해보지 못하시는 분들을 위해, 모두의 MLOps에서는 우분투가 설치되는 데스크톱 하나만 준비되어 있다면 MLOps 시스템을 밑바닥부터 구축하고 사용해 볼 수 있는 방법을 다룰 예정입니다.</description></item><item><title>2. Setup Kubernetes</title><link>https://mlops-for-all.github.io/docs/setup-kubernetes/kubernetes/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/setup-kubernetes/kubernetes/</guid><description>Setup Kubernetes Cluster # 쿠버네티스를 처음 배우시는 분들에게 첫 진입 장벽은 쿠버네티스 실습 환경을 구축하는 것입니다.
프로덕션 레벨의 쿠버네티스 클러스터를 구축할 수 있게 공식적으로 지원하는 도구는 kubeadm 이지만, 사용자들이 조금 더 쉽게 구축할 수 있도록 도와주는 kubespray, kops 등의 도구도 존재하며, 학습 목적을 위해서 컴팩트한 쿠버네티스 클러스터를 정말 쉽게 구축할 수 있도록 도와주는 k3s, minikube, microk8s, kind 등의 도구도 존재합니다.
각각의 도구는 장단점이 다르기에 사용자마다 선호하는 도구가 다른 점을 고려하여, 본 글에서는 kubeadm, k3s, minikube의 3가지 도구를 활용하여 쿠버네티스 클러스터를 구축하는 방법을 다룹니다.</description></item><item><title>3. Install Prerequisite</title><link>https://mlops-for-all.github.io/docs/setup-kubernetes/install-prerequisite/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/setup-kubernetes/install-prerequisite/</guid><description>이 페이지에서는 쿠버네티스를 설치하기에 앞서, 클러스터와 클라이언트에 설치 혹은 설정해두어야 하는 컴포넌트들에 대한 매뉴얼을 설명합니다.
Install apt packages # 추후 클라이언트와 클러스터의 원활한 통신을 위해서는 Port-Forwarding을 수행해야 할 일이 있습니다. Port-Forwarding을 위해서는 클러스터에 다음 패키지를 설치해 주어야 합니다.
sudo apt-get update sudo apt-get install -y socat Install Docker # 도커 설치에 필요한 APT 패키지들을 설치합니다.
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y ca-certificates curl gnupg lsb-release 도커의 공식 GPG key를 추가합니다.</description></item><item><title>4.2. Install Kubernetes - Minikube</title><link>https://mlops-for-all.github.io/docs/setup-kubernetes/kubernetes-with-minikube/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/setup-kubernetes/kubernetes-with-minikube/</guid><description>1. Prerequisite # 쿠버네티스 클러스터를 구축하기에 앞서, 필요한 구성 요소들을 클러스터에 설치합니다.
Install Prerequisite을 참고하여 Kubernetes를 설치하기 전에 필요한 요소들을 클러스터에 설치해 주시기 바랍니다.
Minikube binary # Minikube를 사용하기 위해, v1.24.0 버전의 Minikube 바이너리를 설치합니다.
wget https://github.com/kubernetes/minikube/releases/download/v1.24.0/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube 정상적으로 설치되었는지 확인합니다.
minikube version 다음과 같은 메시지가 보이면 정상적으로 설치된 것을 의미합니다.
mlops@ubuntu:~$ minikube version minikube version: v1.24.0 commit: 76b94fb3c4e8ac5062daf70d60cf03ddcc0a741b 2. 쿠버네티스 클러스터 셋업 # 이제 Minikube를 활용해 쿠버네티스 클러스터를 클러스터에 구축합니다.</description></item><item><title>5. Install Kubernetes Modules</title><link>https://mlops-for-all.github.io/docs/setup-kubernetes/install-kubernetes-module/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/setup-kubernetes/install-kubernetes-module/</guid><description>Setup Kubernetes Modules # 이번 페이지에서는 클러스터에서 사용할 모듈을 클라이언트 노드에서 설치하는 과정에 관해서 설명합니다.
앞으로 소개되는 과정은 모두 클라이언트 노드에서 진행됩니다.
Helm # Helm은 쿠버네티스 패키지와 관련된 자원을 한 번에 배포하고 관리할 수 있게 도와주는 패키지 매니징 도구 중 하나입니다.
현재 폴더에 Helm v3.7.1 버전을 내려받습니다. For Linux amd64
wget https://get.helm.sh/helm-v3.7.1-linux-amd64.tar.gz 다른 OS는 공식 홈페이지를 참고하시어, 클라이언트 노드의 OS와 CPU에 맞는 바이너리의 다운 경로를 확인하시기 바랍니다.</description></item><item><title>6. (Optional) Setup GPU</title><link>https://mlops-for-all.github.io/docs/setup-kubernetes/setup-nvidia-gpu/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/setup-kubernetes/setup-nvidia-gpu/</guid><description>쿠버네티스 및 Kubeflow 등에서 GP 를 사용하기 위해서는 다음 작업이 필요합니다.
1. Install NVIDIA Driver # nvidia-smi 수행 시 다음과 같은 화면이 출력된다면 이 단계는 생략해 주시기 바랍니다.
mlops@ubuntu:~$ nvidia-smi +-----------------------------------------------------------------------------+ | NVIDIA-SMI 470.86 Driver Version: 470.86 CUDA Version: 11.4 | |-------------------------------+----------------------+----------------------+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | | | | MIG M. | |===============================+======================+======================| | 0 NVIDIA GeForce .</description></item><item><title>1. Kubeflow</title><link>https://mlops-for-all.github.io/docs/setup-components/install-components-kf/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/setup-components/install-components-kf/</guid><description>설치 파일 준비 # Kubeflow v1.4.0 버전을 설치하기 위해서, 설치에 필요한 manifests 파일들을 준비합니다.
kubeflow/manifests Repository 를 v1.4.0 태그로 깃 클론한 뒤, 해당 폴더로 이동합니다.
git clone -b v1.4.0 https://github.com/kubeflow/manifests.git cd manifests 각 구성 요소별 설치 # kubeflow/manifests Repository 에 각 구성 요소별 설치 커맨드가 적혀져 있지만, 설치하며 발생할 수 있는 이슈 혹은 정상적으로 설치되었는지 확인하는 방법이 적혀져 있지 않아 처음 설치하는 경우 어려움을 겪는 경우가 많습니다.
따라서, 각 구성 요소별로 정상적으로 설치되었는지 확인하는 방법을 함께 작성합니다.</description></item><item><title>2. MLflow Tracking Server</title><link>https://mlops-for-all.github.io/docs/setup-components/install-components-mlflow/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/setup-components/install-components-mlflow/</guid><description>Install MLflow Tracking Server # MLflow는 대표적인 오픈소스 ML 실험 관리 도구입니다. MLflow는 실험 관리 용도 외에도 ML Model 패키징, ML 모델 배포 관리, ML 모델 저장과 같은 기능도 제공하고 있습니다.
모두의 MLOps에서는 MLflow를 실험 관리 용도로 사용합니다.
그래서 MLflow에서 관리하는 데이터를 저장하고 UI를 제공하는 MLflow Tracking Server를 쿠버네티스 클러스터에 배포하여 사용할 예정입니다.
Before Install MLflow Tracking Server # PostgreSQL DB 설치 # MLflow Tracking Server가 Backend Store로 사용할 용도의 PostgreSQL DB를 쿠버네티스 클러스터에 배포합니다.</description></item><item><title>3. Seldon-Core</title><link>https://mlops-for-all.github.io/docs/setup-components/install-components-seldon/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/setup-components/install-components-seldon/</guid><description>Seldon-Core # Seldon-Core는 쿠버네티스 환경에 수많은 머신러닝 모델을 배포하고 관리할 수 있는 오픈소스 프레임워크 중 하나입니다.
더 자세한 내용은 Seldon-Core 의 공식 제품 설명 페이지 와 깃헙 그리고 API Deployment 파트를 참고해주시기를 바랍니다.
Selon-Core 설치 # Seldon-Core를 사용하기 위해서는 쿠버네티스의 인그레스(Ingress)를 담당하는 Ambassador 와 Istio 와 같은 모듈이 필요합니다.
Seldon-Core 에서는 Ambassador 와 Istio 만을 공식적으로 지원하며, 모두의 MLOps에서는 Ambassador를 사용해 Seldon-core를 사용하므로 Ambassador를 설치하겠습니다.
Ambassador - Helm Repository 추가 # helm repo add datawire https://www.</description></item></channel></rss>