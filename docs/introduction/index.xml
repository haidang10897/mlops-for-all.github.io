<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on</title><link>https://mlops-for-all.github.io/docs/introduction/</link><description>Recent content in Introduction on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 03 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mlops-for-all.github.io/docs/introduction/index.xml" rel="self" type="application/rss+xml"/><item><title>1. What is MLOps?</title><link>https://mlops-for-all.github.io/docs/introduction/intro/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/introduction/intro/</guid><description>Machine Learning Project # 2012년 Alexnet 이후 CV, NLP를 비롯하여 데이터가 존재하는 도메인이라면 어디서든 머신러닝과 딥러닝을 도입하고자 하였습니다.
딥러닝과 머신러닝은 AI라는 단어로 묶이며 불렸고 많은 매체에서 AI의 필요성을 외쳤습니다. 그리고 무수히 많은 기업에서 머신러닝과 딥러닝을 이용한 수많은 프로젝트를 진행하였습니다. 하지만 그 결과는 어떻게 되었을까요?
엘리먼트 AI의 음병찬 동북아 지역 총괄책임자는 &amp;ldquo;10개 기업에 AI 프로젝트를 시작한다면 그중 9개는 컨셉검증(POC)만 하다 끝난다&amp;rdquo;고 말했습니다.
이처럼 많은 프로젝트에서 머신러닝과 딥러닝은 이 문제를 풀 수 있을 것 같다는 가능성만을 보여주고 사라졌습니다.</description></item><item><title>2. Levels of MLOps</title><link>https://mlops-for-all.github.io/docs/introduction/levels/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/introduction/levels/</guid><description>이번 페이지에서는 구글에서 발표한 MLOps의 단계를 보며 MLOps의 핵심 기능은 무엇인지 알아 보겠습니다.
Hidden Technical Debt in ML System # 구글은 무려 2015년부터 MLOps의 필요성을 말했습니다. Hidden Technical Debt in Machine Learning Systems 은 그런 구글의 생각을 담은 논문입니다.
이 논문의 핵심은 바로 머신러닝을 이용한 제품을 만드는데 있어서 머신러닝 코드는 전체 시스템을 구성하는데 있어서 아주 일부일 뿐이라는 것입니다.
구글은 이 논문을 더 발전시켜서 MLOps라는 용어를 만들어 확장시켰습니다. 더 자세한 내용은 구글 클라우드 홈페이지에서 더 자세한 내용을 확인할 수 있습니다.</description></item><item><title>3. Components of MLOps</title><link>https://mlops-for-all.github.io/docs/introduction/component/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/introduction/component/</guid><description>Practitioners guide to MLOps # 2021년 5월에 발표된 구글의 white paper : Practitioners guide to MLOps: A framework for continuous delivery and automation of machine learning에서는 MLOps의 핵심 기능들로 다음과 같은 것들을 언급하였습니다.
각 기능이 어떤 역할을 하는지 살펴보겠습니다.
1. Experimentation # 실험(Experimentation)은 머신러닝 엔지니어들이 데이터를 분석하고, 프로토타입 모델을 만들며 학습 기능을 구현할 수 있도록 하는 다음과 같은 기능을 제공합니다.
깃(Git)과 같은 버전 컨트롤 도구와 통합된 노트북(Jupyter Notebook) 환경 제공 사용한 데이터, 하이퍼 파라미터, 평가 지표를 포함한 실험 추적 기능 제공 데이터와 모델에 대한 분석 및 시각화 기능 제공 2.</description></item><item><title>4. Why Kubernetes?</title><link>https://mlops-for-all.github.io/docs/introduction/why_kubernetes/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://mlops-for-all.github.io/docs/introduction/why_kubernetes/</guid><description>MLOps &amp;amp; Kubernetes # 그렇다면 MLOps를 이야기할 때, 쿠버네티스(Kubernetes)라는 단어가 항상 함께 들리는 이유가 무엇일까요?
성공적인 MLOps 시스템을 구축하기 위해서는 MLOps의 구성요소 에서 설명한 것처럼 다양한 구성 요소들이 필요하지만, 각각의 구성 요소들이 유기적으로 운영되기 위해서는 인프라 레벨에서 수많은 이슈를 해결해야 합니다.
간단하게는 수많은 머신러닝 모델의 학습 요청을 차례대로 실행하는 것, 다른 작업 공간에서도 같은 실행 환경을 보장해야 하는 것, 배포된 서비스에 장애가 생겼을 때 빠르게 대응해야 하는 것 등의 이슈 등을 생각해볼 수 있습니다.</description></item></channel></rss>